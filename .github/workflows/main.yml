name: Full PR Validator and Auto-Merge

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  LOG_FILE: workflow.log

jobs:
  check-and-merge:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout PR Code
      uses: actions/checkout@v3

    - name: Setup Log File
      run: echo "🔍 Workflow started at $(date)" > ${{ env.LOG_FILE }}

    - name: List Changed Files
      run: |
        git fetch origin main
        git diff --name-only origin/main > changed_files.txt
        echo "📄 Changed Files:" >> ${{ env.LOG_FILE }}
        cat changed_files.txt >> ${{ env.LOG_FILE }}

    - name: Check for /owner/* Restriction
      run: |
        REPO_OWNER="${{ github.repository_owner }}"
        PR_USER="${{ github.actor }}"
        echo "👤 Repo Owner: $REPO_OWNER" >> ${{ env.LOG_FILE }}
        echo "👤 PR Author: $PR_USER" >> ${{ env.LOG_FILE }}

        if grep '^owner/' changed_files.txt; then
          if [ "$PR_USER" != "$REPO_OWNER" ]; then
            echo "❌ Access Denied: $PR_USER tried to change /owner/*" >> ${{ env.LOG_FILE }}
            exit 1
          else
            echo "✅ Owner access confirmed for /owner/*" >> ${{ env.LOG_FILE }}
          fi
        else
          echo "✅ No restricted paths modified" >> ${{ env.LOG_FILE }}
        fi

    - name: Check Allowed File Types
      run: |
        ERRORS=0
        while read FILE; do
          echo "🔍 Checking file: $FILE" >> ${{ env.LOG_FILE }}
          if [[ "$FILE" =~ \.(c|cpp|java|js|html|txt|doc|xls|dt|py|cfg|h)$ || "$FILE" == Makefile || "$FILE" == kernel.config || "$FILE" == .* ]]; then
            echo "✅ Allowed: $FILE" >> ${{ env.LOG_FILE }}
          else
            echo "❌ Blocked: $FILE" >> ${{ env.LOG_FILE }}
            ERRORS=1
          fi
        done < changed_files.txt

        if [ $ERRORS -ne 0 ]; then
          echo "❌ Invalid file types detected." >> ${{ env.LOG_FILE }}
          exit 1
        else
          echo "✅ All file types valid." >> ${{ env.LOG_FILE }}
        fi

    - name: Add Labels - Access Granted
      if: success()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            labels: ['access granted', 'no error']
          });

    - name: Auto-Merge Clean PR
      if: success()
      uses: peter-evans/enable-pull-request-automerge@v3
      with:
        pull-request-number: ${{ github.event.pull_request.number }}
        merge-method: squash

    - name: Add Labels - Rule Violation
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            labels: ['error', 'warning', 'rule violation', 'warn to violation']
          });

    - name: Upload Log
      uses: actions/upload-artifact@v4
      with:
        name: pr-validation-log
        path: ${{ env.LOG_FILE }}
